{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.apiUrl = 'http://10.136.165.182:3621/setName';\n  }\n  setUsername(username) {\n    this.username = username;\n  }\n  getUsername() {\n    return this.username;\n  }\n  postUsername(username) {\n    //const url = `${this.apiUrl}/setName`;\n    user1: UserObject;\n    {\n      username;\n    }\n    ;\n    return this.http.post(this.apiUrl, username);\n  }\n  retrieveUsername() {\n    //return this.http.get<Confix>\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAYA,OAAM,MAAOA,WAAW;EAKtBC;IAHQ,WAAM,GAAG,oCAAoC;EAGtC;EAEfC,WAAW,CAACC,QAAgB;IAC1B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAC,WAAW;IACT,OAAO,IAAI,CAACD,QAAQ;EACtB;EAIAE,YAAY,CAACF,QAAgB;IAC3B;IACAG,KAAK,EAAEC,UAAU;IAAA;MAACJ,QAAQ;;IAAC;IAC3B,OAAO,IAAI,CAACK,IAAI,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,EAAEP,QAAQ,CAAC;EAC9C;EAEAQ,gBAAgB;IACd;EAAA;;AAxBSX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["UserService","constructor","setUsername","username","getUsername","postUsername","user1","UserObject","http","post","apiUrl","retrieveUsername","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sadew\\AngularProjects\\BORE\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\ninterface UserObject {\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  username!: string;\n  private apiUrl = 'http://10.136.165.182:3621/setName'\n  private http!: HttpClient;\n\n  constructor() {}\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  getUsername(): string {\n    return this.username;\n  }\n\n  \n  \n  postUsername(username: string) {\n    //const url = `${this.apiUrl}/setName`;\n    user1: UserObject{username};\n    return this.http.post(this.apiUrl, username);\n  }\n\n  retrieveUsername() {\n    //return this.http.get<Confix>\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
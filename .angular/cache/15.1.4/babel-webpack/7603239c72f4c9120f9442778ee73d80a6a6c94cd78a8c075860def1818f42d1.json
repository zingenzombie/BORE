{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet UserService = class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://10.136.165.182:3621/api/setName';\n    this.user = {\n      username: this.username\n    };\n  }\n  setUsername(username) {\n    this.username = username;\n  }\n  getUsername() {\n    return this.username;\n  }\n  /*\r\n  postUsername(username: string) {\r\n    //const url = `${this.apiUrl}/setName`;\r\n    // return this.http.post<any>(this.apiUrl, this.user).subscribe(data => {\r\n    //   this.postId = data.id;\r\n    // })\r\n    return this.http.post(this.apiUrl, this.user);\r\n  }\r\n  */\n  retrieveUsername() {\n    //return this.http.get<Confix>\n  }\n};\nUserService = __decorate([Injectable({\n  providedIn: 'root'\n})], UserService);\nexport { UserService };","map":{"version":3,"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAWnC,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAMtBC,YAAoBC,IAAK;IAAL,SAAI,GAAJA,IAAI;IAJhB,WAAM,GAAG,wCAAwC;IAEjD,SAAI,GAAe;MAACC,QAAQ,EAAE,IAAI,CAACA;IAAQ,CAAC;EAEvB;EAE7BC,WAAW,CAACD,QAAgB;IAC1B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAE,WAAW;IACT,OAAO,IAAI,CAACF,QAAQ;EACtB;EAEA;;;;;;;;;EASAG,gBAAgB;IACd;EAAA;CAEH;AA5BYN,WAAW,eAHvBD,UAAU,CAAC;EACVQ,UAAU,EAAE;CACb,CAAC,GACWP,WAAW,CA4BvB;SA5BYA,WAAW","names":["Injectable","UserService","constructor","http","username","setUsername","getUsername","retrieveUsername","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sadew\\AngularProjects\\BORE\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\ninterface UserObject {\n  username: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  username!: string;\n  private apiUrl = 'http://10.136.165.182:3621/api/setName'\n  \n  private user: UserObject = {username: this.username};\n\n  constructor(private http: ) {}\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  getUsername(): string {\n    return this.username;\n  }\n  \n  /*\n  postUsername(username: string) {\n    //const url = `${this.apiUrl}/setName`;\n    // return this.http.post<any>(this.apiUrl, this.user).subscribe(data => {\n    //   this.postId = data.id;\n    // })\n    return this.http.post(this.apiUrl, this.user);\n  }\n*/\n  retrieveUsername() {\n    //return this.http.get<Confix>\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  //username!: string;\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://bore-f3b16-default-rtdb.firebaseio.com/';\n  }\n  setUsername(username) {\n    console.log(username);\n    const headers = new HttpHeaders({\n      'myHeader': 'bore'\n    });\n    this.http.post(username, {\n      headers: headers\n    }).subscribe(res => {\n      console.log(res);\n    });\n    //this.username = username;\n  }\n\n  getUsername() {\n    return this.username;\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAEtB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iDAAiD;EAIlE;EAEAC,WAAW,CAACC,QAAgB;IAC1BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,MAAMG,OAAO,GAAG,IAAIR,WAAW,CAAC;MAAC,UAAU,EAAE;IAAM,CAAC,CAAC;IACrD,IAAI,CAACG,IAAI,CAACM,IAAI,CAEZJ,QAAQ,EAAE;MAACG,OAAO,EAAEA;IAAO,CAAC,CAAC,CAC5BE,SAAS,CAAEC,GAAG,IAAI;MACjBL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;IAClB,CAAC,CAAC;IACJ;EACF;;EAEAC,WAAW;IACT,OAAO,IAAI,CAACP,QAAQ;EACtB;;AArBWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["HttpHeaders","UserService","constructor","http","setUsername","username","console","log","headers","post","subscribe","res","getUsername","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sadew\\AngularProjects\\BORE\\src\\app\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'https://bore-f3b16-default-rtdb.firebaseio.com/';\n  //username!: string;\n  constructor(private http: HttpClient) {\n\n  }\n\n  setUsername(username: string) {\n    console.log(username);\n    const headers = new HttpHeaders({'myHeader': 'bore'})\n    this.http.post<{username: string}>(\n      ,\n      username, {headers: headers})\n      .subscribe((res) => {\n        console.log(res);\n      });\n    //this.username = username;\n  }\n\n  getUsername(): string {\n    return this.username;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
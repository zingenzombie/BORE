{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n  }\n  setUsername(username) {\n    this.username = username;\n  }\n  getUsername() {\n    return this.username;\n  }\n  // create a user\n  createUser(username) {\n    const headers = new HttpHeaders({\n      'myHeader': 'procademy'\n    });\n    this.http.post;\n  }\n  // retrieve user \n  fetchUser() {}\n  deleteUser() {}\n  deleteAllUsers() {}\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAG5D,OAAM,MAAOC,YAAY;EAErBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAExB;EAEAC,WAAW,CAACC,QAAgB;IACxB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAEAC,WAAW;IACP,OAAO,IAAI,CAACD,QAAQ;EACxB;EAEA;EACAE,UAAU,CAACF,QAAgB;IACvB,MAAMG,OAAO,GAAG,IAAIR,WAAW,CAAC;MAAC,UAAU,EAAE;IAAW,CAAC,CAAC;IAC1D,IAAI,CAACG,IAAI,CAACM,IAAwB;EACtC;EAEA;EACAC,SAAS,IAET;EAEAC,UAAU,IAEV;EAEAC,cAAc,IAEd;;AA/BSX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YADA;AAAM","names":["HttpHeaders","UsersService","constructor","http","setUsername","username","getUsername","createUser","headers","post","fetchUser","deleteUser","deleteAllUsers","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\sadew\\AngularProjects\\BORE\\src\\app\\Service\\users.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\n\r\n@Injectable({providedIn: \"root\"})\r\nexport class UsersService {\r\n    username!: string;\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    \r\n    setUsername(username: string) {\r\n        this.username = username;\r\n    }\r\n    \r\n    getUsername(): string {\r\n        return this.username;\r\n    }\r\n\r\n    // create a user\r\n    createUser(username: string) {\r\n        const headers = new HttpHeaders({'myHeader': 'procademy'});\r\n        this.http.post<{username: string}>\r\n    }\r\n\r\n    // retrieve user \r\n    fetchUser() {\r\n\r\n    }\r\n\r\n    deleteUser() {\r\n\r\n    }\r\n\r\n    deleteAllUsers() {\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
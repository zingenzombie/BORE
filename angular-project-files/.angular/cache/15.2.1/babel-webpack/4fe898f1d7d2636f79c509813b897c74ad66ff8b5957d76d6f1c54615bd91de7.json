{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UsernameComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Hi \", ctx_r0.username, \"!\\n\");\n  }\n}\nfunction UsernameComponent_table_12_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 11)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r4);\n  }\n}\nfunction UsernameComponent_table_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 9);\n    i0.ɵɵtemplate(1, UsernameComponent_table_12_tr_1_Template, 3, 1, \"tr\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.userList);\n  }\n}\nexport class UsernameComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.submitted = false;\n    this.showUsers = false;\n    this.userList = [];\n  }\n  //constructor(private http: HttpClient, private usersService: UsersService) {}\n  ngOnInit() {}\n  toggleUsers() {\n    this.showUsers = !this.showUsers;\n  }\n  onSubmit(name) {\n    console.log(name);\n    this.submitHelper(name);\n    this.userService.setUsername(this.name);\n    this.addUser(this.name);\n    this.username = this.name;\n    //get username\n    this.userService.updateUsername();\n  }\n  submitHelper(name) {\n    this.userService.postUsername(name);\n    this.submitted = true;\n  }\n  addUser(name) {\n    this.userList = [...this.userList, name];\n  }\n  // url/getAllMembers returns a string separated by commas\n  // puts users into a list\n  getAllUsers(input) {\n    if (!input) {\n      return [];\n    }\n    const list = input.split(',');\n    return list;\n  }\n}\nUsernameComponent.ɵfac = function UsernameComponent_Factory(t) {\n  return new (t || UsernameComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nUsernameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsernameComponent,\n  selectors: [[\"app-username\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[\"class\", \"address-user\", 4, \"ngIf\"], [3, \"ngSubmit\"], [\"usersForm\", \"ngForm\"], [1, \"text\"], [\"type\", \"text\", \"name\", \"Name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"button\"], [1, \"button\", 3, \"click\"], [\"class\", \"table\", 4, \"ngIf\"], [1, \"address-user\"], [1, \"table\"], [\"class\", \"list-user\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-user\"]],\n  template: function UsernameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵtemplate(0, UsernameComponent_div_0_Template, 3, 1, \"div\", 0);\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UsernameComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r1 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r1.value));\n      });\n      i0.ɵɵelementStart(4, \"label\", 3);\n      i0.ɵɵtext(5, \" Enter your username: \");\n      i0.ɵɵelementStart(6, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function UsernameComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \"Submit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function UsernameComponent_Template_button_click_10_listener() {\n        return ctx.toggleUsers();\n      });\n      i0.ɵɵtext(11, \"See Users\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, UsernameComponent_table_12_Template, 2, 1, \"table\", 7);\n      i0.ɵɵelement(13, \"br\")(14, \"hr\");\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.username);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.showUsers);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".button[_ngcontent-%COMP%] {\\n    box-shadow: inset 0 1px 0 0 #dcecfb;\\n    background: #bddbfa linear-gradient(to bottom, #bddbfa 5%, #7140e2 100%);\\n    border-radius: 6px;\\n    border: 1px solid #84bbf3;\\n    display: inline-block;\\n    cursor: pointer;\\n    color: #ffffff;\\n    font-family: Arial, sans-serif;\\n    font-size: 14px;\\n    font-weight: bold;\\n    padding: 1px 8px; \\n    text-decoration: none;\\n    text-shadow: 0 1px 0 #528ecc;\\n    outline: 0;\\n}\\n\\n.button[_ngcontent-%COMP%]:active {\\n    background: #a8c9f7 linear-gradient(to bottom, #a8c9f7 5%, #5f23b5 100%);\\n    box-shadow: inset 0 1px 0 0 #ffffff, 0 1px 3px 0 rgba(0, 0, 0, 0.5);\\n}\\n\\n.text[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin: auto;\\n    width: 50%;\\n    font-family: Arial, sans-serif;\\n    font-size: 15px;\\n    font-weight: bold;\\n}\\n\\n.address-user[_ngcontent-%COMP%] {\\n    width: 50%;\\n    font-family: Arial, sans-serif;\\n    font-size: 15px;\\n    font-weight: bold;\\n}\\n\\n.list-user[_ngcontent-%COMP%] {\\n    width: 50%;\\n    font-family: Arial, sans-serif;\\n    font-size: 14px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlcm5hbWUvdXNlcm5hbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1DQUFtQztJQUNuQyx3RUFBd0U7SUFDeEUsa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixxQkFBcUI7SUFDckIsZUFBZTtJQUNmLGNBQWM7SUFDZCw4QkFBOEI7SUFDOUIsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLDRCQUE0QjtJQUM1QixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSx3RUFBd0U7SUFDeEUsbUVBQW1FO0FBQ3ZFOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixVQUFVO0lBQ1YsOEJBQThCO0lBQzlCLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsOEJBQThCO0lBQzlCLGVBQWU7SUFDZixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsOEJBQThCO0lBQzlCLGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIuYnV0dG9uIHtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAwIDAgI2RjZWNmYjtcbiAgICBiYWNrZ3JvdW5kOiAjYmRkYmZhIGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNiZGRiZmEgNSUsICM3MTQwZTIgMTAwJSk7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4NGJiZjM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHBhZGRpbmc6IDFweCA4cHg7IFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB0ZXh0LXNoYWRvdzogMCAxcHggMCAjNTI4ZWNjO1xuICAgIG91dGxpbmU6IDA7XG59XG5cbi5idXR0b246YWN0aXZlIHtcbiAgICBiYWNrZ3JvdW5kOiAjYThjOWY3IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNhOGM5ZjcgNSUsICM1ZjIzYjUgMTAwJSk7XG4gICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMCAwICNmZmZmZmYsIDAgMXB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLnRleHQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYWRkcmVzcy11c2VyIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5saXN0LXVzZXIge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;IAMAA,8BAA2C;IACzCA,qBAAI;IACJA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,qDACF;;;;;IAiBEA,8BAAqD;IAC/CA,YAAQ;IAAAA,iBAAK;;;;IAAbA,eAAQ;IAARA,6BAAQ;;;;;IAFhBA,gCAAuC;IACrCA,0EAEK;IACPA,iBAAQ;;;;IAHkCA,eAAW;IAAXA,yCAAW;;;ACbrD,OAAM,MAAOC,iBAAiB;EAQ5BC,YAAmBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAN9B,cAAS,GAAG,KAAK;IAEjB,cAAS,GAAG,KAAK;IAEjB,aAAQ,GAAa,EAAE;EAEuB;EAC9C;EAEAC,QAAQ,IAER;EAEAC,WAAW;IACT,IAAI,CAACC,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAClC;EAEAC,QAAQ,CAACC,IAAY;IACnBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjB,IAAI,CAACG,YAAY,CAACH,IAAI,CAAC;IACvB,IAAI,CAACL,WAAW,CAACS,WAAW,CAAC,IAAI,CAACJ,IAAI,CAAC;IAEvC,IAAI,CAACK,OAAO,CAAC,IAAI,CAACL,IAAI,CAAC;IAEvB,IAAI,CAACM,QAAQ,GAAG,IAAI,CAACN,IAAI;IACzB;IACA,IAAI,CAACL,WAAW,CAACY,cAAc,EAAE;EACnC;EAEAJ,YAAY,CAACH,IAAY;IACvB,IAAI,CAACL,WAAW,CAACa,YAAY,CAACR,IAAI,CAAC;IACnC,IAAI,CAACS,SAAS,GAAG,IAAI;EACvB;EAEAJ,OAAO,CAACL,IAAY;IAClB,IAAI,CAACU,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACA,QAAQ,EAAEV,IAAI,CAAC;EAC1C;EAEA;EACA;EACAW,WAAW,CAACC,KAAa;IACvB,IAAI,CAACA,KAAK,EAAE;MACV,OAAO,EAAE;;IAEX,MAAMC,IAAI,GAAaD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;IACvC,OAAOD,IAAI;EACb;;AAhDWpB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDP9B3B,kEAGM;MAENA,qBAAI;MACJA,kCAAiE;MAAvCA;QAAAA;QAAA;QAAA,OAAYA,sCAAyB;MAAA,EAAC;MAC9DA,gCAAoB;MAClBA,sCACA;MAAAA,gCAA2D;MAAxCA;QAAA;MAAA,EAAkB;MAArCA,iBAA2D;MAE7DA,iCAAqC;MAAAA,sBAAM;MAAAA,iBAAS;MAMtDA,qBAAI;MACJA,kCAA8C;MAAxBA;QAAA,OAAS4B,iBAAa;MAAA,EAAC;MAAC5B,0BAAS;MAAAA,iBAAS;MAChEA,wEAIQ;MACRA,sBAAI;;;MAxBuBA,mCAAc;MASlBA,eAAkB;MAAlBA,kCAAkB;MAUnBA,eAAe;MAAfA,oCAAe","names":["i0","UsernameComponent","constructor","userService","ngOnInit","toggleUsers","showUsers","onSubmit","name","console","log","submitHelper","setUsername","addUser","username","updateUsername","postUsername","submitted","userList","getAllUsers","input","list","split","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/zingen/Documents/Programming Projects/BORE/angular-project-files/src/app/username/username.component.html","/Users/zingen/Documents/Programming Projects/BORE/angular-project-files/src/app/username/username.component.ts"],"sourcesContent":["<!-- User: <input type=\"text\" [(ngModel)]=\"usernameForm\"> -->\n\n<!-- User: <input type=\"text\" class=\"form-control\" id=\"name\"\n       required\n       [(ngModel)]=\"usernameForm\" name=\"name\"> -->\n\n<div class=\"address-user\" *ngIf=\"username\">\n  <br>\n  Hi {{username}}!\n</div>\n\n<br>\n<form #usersForm=\"ngForm\" (ngSubmit)=\"onSubmit(usersForm.value)\">\n  <label class=\"text\">\n    Enter your username:\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"Name\" required>\n  </label>\n  <button class=\"button\" type=\"submit\">Submit</button>\n</form>\n\n<!-- <div *ngIf=\"userService.getUsername()\">\n  <p>Hello {{userService.getUsername()}}!</p>\n</div> -->\n<br>\n<button class=\"button\"(click)=\"toggleUsers()\">See Users</button>\n<table class=\"table\" *ngIf=\"showUsers\">\n  <tr  class=\"list-user\" *ngFor=\"let user of userList\">\n    <td>{{user}}</td>\n  </tr>\n</table>\n<br>\n<hr>\n","import { Component, NgModule, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { User } from './user';\nimport { UserService } from '../services/user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-username',\n  templateUrl: './username.component.html',\n  styleUrls: ['./username.component.css']\n})\n\nexport class UsernameComponent implements OnInit{\n  name!: string;\n  submitted = false;\n  username!: string;\n  showUsers = false;\n\n  userList: string[] = [];\n  \n  constructor(public userService: UserService) {}\n  //constructor(private http: HttpClient, private usersService: UsersService) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  toggleUsers() {\n    this.showUsers = !this.showUsers;\n  }\n\n  onSubmit(name: string) {\n    console.log(name);\n    this.submitHelper(name);\n    this.userService.setUsername(this.name);\n    \n    this.addUser(this.name);\n      \n    this.username = this.name;\n    //get username\n    this.userService.updateUsername();\n  }\n\n  submitHelper(name: string) {\n    this.userService.postUsername(name);\n    this.submitted = true;\n  }\n\n  addUser(name: string) {\n    this.userList = [...this.userList, name];\n  }\n\n  // url/getAllMembers returns a string separated by commas\n  // puts users into a list\n  getAllUsers(input: string): string[] {\n    if (!input) {\n      return [];\n    }\n    const list: string[] = input.split(',');\n    return list;\n  }\n\n  \n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}